//rrd
import { FormProps, useNavigate, useOutletContext } from "react-router-dom";
//datatypes
import { OutletContext } from "../datatypes/datatypes";
//bootstrap
import { Alert, Button, Col, Container, Form, Row } from "react-bootstrap";
import { useEffect, useState } from "react";
import { generateRandomId, saveUpdatedNotes } from "../utils/utils";

const NoteForm = ({ action }: FormProps) => {
  //*Retrieve props
  const { notes, setNotes, currentNote, setCurrentNote } =
    useOutletContext<OutletContext>();

  //*if action is "new" note, id is autogenerated and current note is updated.
  useEffect(() => {
    if (action === "new") {
      setCurrentNote((prevNote) => ({ ...prevNote, id: generateRandomId() }));
    }
  }, []);

  //*onChange input handler
  const inputChangeHandler = (
    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>
  ) => {
    setCurrentNote((prevNote) => ({
      ...prevNote,
      [e.target.name]: e.target.value,
    }));
  };

  let navigate = useNavigate();

  //*onClick button handler
  const buttonClickHandler = (e: React.MouseEvent<HTMLButtonElement>) => {
    e.preventDefault();

    saveUpdatedNotes([...notes, currentNote]);

    setNotes((prevNotes) => [...prevNotes, currentNote]);

    //*set currentNote state to init
    setCurrentNote({
      id: generateRandomId(),
      title: "",
      body: "",
    });

    navigate("/new");
  };

  //alert message
  const [message] = useState<string>("message");

  console.log(notes);
  return (
    <Container className="mt-2">
      <Row className="justify-content-center">
        <Col md={6}>
          <Alert variant="success">{message}</Alert>
          <Form>
            <Form.Group controlId="formTitle">
              <Form.Label className="fw-bold">Titulo</Form.Label>
              <Form.Control
                type="text"
                placeholder="Titulo"
                value={currentNote.title}
                onChange={inputChangeHandler}
                name="title"
              />
            </Form.Group>
            <Form.Group controlId="formBody">
              <Form.Label className="fw-bold">Detalle</Form.Label>
              <Form.Control
                as="textarea"
                rows={5}
                placeholder="Detalle"
                value={currentNote.body}
                onChange={inputChangeHandler}
                name="body"
              />
            </Form.Group>
            <div className="text-center">
              <Button
                type="submit"
                variant="primary"
                className="mt-2 mx-auto"
                onClick={buttonClickHandler}
              >
                {action === "new"
                  ? "Guardar Nuevo"
                  : action === "edit"
                  ? "Guardar Cambios"
                  : "indefinido"}
              </Button>
            </div>
          </Form>
        </Col>
      </Row>
    </Container>
  );
};

export default NoteForm;
